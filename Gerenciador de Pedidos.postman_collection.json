{
	"info": {
		"_postman_id": "dc798305-9ee4-44a1-91fa-3d03c9254bb4",
		"name": "Gerenciador de Pedidos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17146099"
	},
	"item": [
		{
			"name": "Cliente",
			"item": [
				{
					"name": "GETs",
					"item": [
						{
							"name": "Listar Clientes",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8082/clientes/clientes",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"clientes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar CEP Cliente",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/clientes/clientes/buscar-cep/1",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"clientes",
										"buscar-cep",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar Cliente pelo CNPJ",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8082/clientes/clientes/filtro?cpf=555",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"clientes",
										"filtro"
									],
									"query": [
										{
											"key": "cpf",
											"value": "555"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POSTs",
					"item": [
						{
							"name": "APIs para Outros Micreserviço",
							"item": [
								{
									"name": "Salvar o usuário da base de clientes",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"login\": \"exampleLogin\",\r\n    \"password\": \"examplePassword\",\r\n    \"roles\": [\r\n        \"USER\",\r\n        \"ADMIN\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8082/clientes/user",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8082",
											"path": [
												"clientes",
												"user"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Criar Cliente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 500\", function () {",
											"  pm.expect(pm.response.code).to.equal(500);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData.timestamp).to.exist.and.to.be.a('string');",
											"  pm.expect(responseData.campo).to.exist.and.to.be.null;",
											"  pm.expect(responseData.mensagem).to.exist.and.to.be.a('string');",
											"  pm.expect(responseData.status).to.exist.and.to.be.a('number');",
											"});",
											"",
											"",
											"pm.test(\"Timestamp is in a valid date format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.timestamp).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/, \"Timestamp format is invalid\");",
											"});",
											"",
											"",
											"pm.test(\"Campo should be null\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.campo).to.be.null;",
											"});",
											"",
											"",
											"pm.test(\"Content-Type is application/json\", function () {",
											"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Matheus Hajer\",\r\n    \"cpf\": \"14475068045\",\r\n    \"email\": \"email@gmail.com\",\r\n    \"dadosCriacaoEnderecoDTO\": [\r\n        {\r\n            \"cep\": \"1310100\",\r\n            \"logradouro\": \"Rua Exemplo\",\r\n            \"numero\": \"321\",\r\n            \"complemento\": \"Apto 456\",\r\n            \"bairro\": \"Centro\",\r\n            \"cidade\": \"Carapicuiba\",\r\n            \"uf\": \"SP\",\r\n            \"isEnderecoPrincipal\": true\r\n        },\r\n                {\r\n            \"cep\": \"12345-678\",\r\n            \"logradouro\": \"Rua Exemplo\",\r\n            \"numero\": \"321\",\r\n            \"complemento\": \"Apto 456\",\r\n            \"bairro\": \"Centro\",\r\n            \"cidade\": \"Carapicuiba\",\r\n            \"uf\": \"SP\",\r\n            \"isEnderecoPrincipal\": false\r\n        }\r\n    ],\r\n    \"dadosCriacaoTelefoneDTO\": [\r\n        {\r\n            \"ddi\": \"55\",\r\n            \"ddd\": \"11\",\r\n            \"numero\": \"940090003\",\r\n            \"isTelefonePrincipal\": true\r\n        },\r\n        {\r\n            \"ddi\": \"55\",\r\n            \"ddd\": \"11\",\r\n            \"numero\": \"940090004\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/clientes/clientes/criar-cliente",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"clientes",
										"criar-cliente"
									]
								},
								"description": "### Create Client\n\nThis endpoint allows you to create a new client.\n\n#### Request Body\n\n- `cliente` (object)\n    - `nome` (string, required): The name of the client.\n    - `cpf` (string, required): The CPF (taxpayer identification) of the client.\n    - `endereco` (object)\n        - `cep` (string, required): The postal code of the client's address.\n        - `logradouro` (string, required): The street name of the client's address.\n        - `numero` (string, required): The street number of the client's address.\n        - `complemento` (string, required): The additional information about the client's address.\n        - `bairro` (string, required): The neighborhood of the client's address.\n        - `cidade` (string, required): The city of the client's address.\n        - `uf` (string, required): The state (UF) of the client's address.\n    - `telefone` (object)\n        - `ddi` (string, required): The international dialing code for the client's phone number.\n        - `ddd` (string, required): The area code for the client's phone number.\n        - `telefone` (string, required): The client's phone number.\n        - `isTelefonePrincipal` (boolean, required): Indicates if the phone number is the primary contact number.\n\n#### Response\n\nUpon successful creation, the endpoint returns:\n\n- Status: 200\n- Content-Type: application/json\n- `cliente` (object)\n    - `id` (number): The unique identifier of the created client.\n    - `nome` (string): The name of the client.\n    - `cpf` (number): The CPF of the client.\n    - `endereco` (object)\n        - `id` (number): The unique identifier of the client's address.\n        - `cep` (string): The postal code of the client's address.\n        - `logradouro` (string): The street name of the client's address.\n        - `numero` (string): The street number of the client's address.\n        - `complemento` (string): The additional information about the client's address.\n        - `bairro` (string): The neighborhood of the client's address.\n        - `cidade` (string): The city of the client's address.\n        - `uf` (string): The state (UF) of the client's address.\n    - `telefone` (object)\n        - `ddi` (number): The international dialing code for the client's phone number.\n        - `ddd` (number): The area code for the client's phone number.\n        - `telefone` (number): The client's phone number.\n        - `telefonePrincipal` (boolean): Indicates if the phone number is the primary contact number."
							},
							"response": []
						},
						{
							"name": "Adicionar Telefone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n      \"ddi\":19,\r\n      \"ddd\":19,\r\n      \"numero\":98946789\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/clientes/telefones/1/adicionar-telefone",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"telefones",
										"1",
										"adicionar-telefone"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adicionar Endereço",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n   {\r\n      \"cep\":\"69037-590\",\r\n      \"logradouro\":\"Beco Major Natan\",\r\n      \"numero\":\"123\",\r\n      \"complemento\":\"\",\r\n      \"bairro\":\"Lírio do Vale\",\r\n      \"cidade\":\"Manaus\",\r\n      \"uf\":\"AM\",\r\n      \"isTelefonePrincipal\": true\r\n   }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/clientes/enderecos/1/adicionar-endereco",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"enderecos",
										"1",
										"adicionar-endereco"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETEs",
					"item": [
						{
							"name": "Deletar telefone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8082/clientes/telefones/1",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"telefones",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deletar Endereço",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8082/clientes/enderecos/3",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"enderecos",
										"3"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUTs",
					"item": [
						{
							"name": "Atualizar Telefone Principal",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"ddi\":19,\r\n   \"ddd\":19,\r\n   \"numero\":34578509\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/clientes/telefones/1/atualizar-telefone-principal",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"telefones",
										"1",
										"atualizar-telefone-principal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Atualizar Endereço Principal",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"cep\":\"69037-590\",\r\n   \"logradouro\":\"Beco Major Natan\",\r\n   \"numero\":\"123\",\r\n   \"complemento\":\"\",\r\n   \"bairro\":\"Lírio do Vale\",\r\n   \"cidade\":\"Manaus\",\r\n   \"uf\":\"AM\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/clientes/enderecos/1/atualizar-endereco-principal",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"enderecos",
										"1",
										"atualizar-endereco-principal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PATCHs",
					"item": [
						{
							"name": "Atualizar Nome  Cliente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has required fields\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.nomeAntigo).to.exist.and.to.be.a('string');",
											"  pm.expect(responseData.nomeAtualizado).to.exist.and.to.be.a('string');",
											"});",
											"",
											"",
											"pm.test(\"nomeAntigo should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.nomeAntigo).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"The nomeAtualizado should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.nomeAtualizado).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Content-Type header is set to application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjgyNjJ9.AwAUeY8htrFtgCyXDLhnrwz97d5uqrrj0odor0JRW60",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nomeAtualizado\": \"Cliete teste 1 - atualizado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/clientes/clientes/1/atualizar-nome",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"clientes",
										"clientes",
										"1",
										"atualizar-nome"
									]
								},
								"description": "### Create Client\n\nThis endpoint allows you to create a new client.\n\n#### Request Body\n\n- `cliente` (object)\n    - `nome` (string, required): The name of the client.\n    - `cpf` (string, required): The CPF (taxpayer identification) of the client.\n    - `endereco` (object)\n        - `cep` (string, required): The postal code of the client's address.\n        - `logradouro` (string, required): The street name of the client's address.\n        - `numero` (string, required): The street number of the client's address.\n        - `complemento` (string, required): The additional information about the client's address.\n        - `bairro` (string, required): The neighborhood of the client's address.\n        - `cidade` (string, required): The city of the client's address.\n        - `uf` (string, required): The state (UF) of the client's address.\n    - `telefone` (object)\n        - `ddi` (string, required): The international dialing code for the client's phone number.\n        - `ddd` (string, required): The area code for the client's phone number.\n        - `telefone` (string, required): The client's phone number.\n        - `isTelefonePrincipal` (boolean, required): Indicates if the phone number is the primary contact number.\n\n#### Response\n\nUpon successful creation, the endpoint returns:\n\n- Status: 200\n- Content-Type: application/json\n- `cliente` (object)\n    - `id` (number): The unique identifier of the created client.\n    - `nome` (string): The name of the client.\n    - `cpf` (number): The CPF of the client.\n    - `endereco` (object)\n        - `id` (number): The unique identifier of the client's address.\n        - `cep` (string): The postal code of the client's address.\n        - `logradouro` (string): The street name of the client's address.\n        - `numero` (string): The street number of the client's address.\n        - `complemento` (string): The additional information about the client's address.\n        - `bairro` (string): The neighborhood of the client's address.\n        - `cidade` (string): The city of the client's address.\n        - `uf` (string): The state (UF) of the client's address.\n    - `telefone` (object)\n        - `ddi` (number): The international dialing code for the client's phone number.\n        - `ddd` (number): The area code for the client's phone number.\n        - `telefone` (number): The client's phone number.\n        - `telefonePrincipal` (boolean): Indicates if the phone number is the primary contact number."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Produto",
			"item": [
				{
					"name": "GET Interno",
					"item": [
						{
							"name": "Listar Todos Produtos Paginado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Verify that the 'content' array is present in the response and contains the expected number of elements\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.content).to.exist.and.to.be.an('array');",
											"    pm.expect(responseData.content.length).to.be.at.least(0);",
											"});",
											"",
											"",
											"pm.test(\"Validate that 'nome' is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.content).to.be.an('array').that.is.not.empty;",
											"    responseData.content.forEach(function (produto) {",
											"        pm.expect(produto.nome).to.be.a('string').that.is.not.empty;",
											"    });",
											"});",
											"",
											"pm.test(\"The 'pageable' object is present in the response\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.pageable).to.exist;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/produtos/produtos",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar Produto By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Nome should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.nome).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Nome should not be empty\");",
											"});",
											"",
											"pm.test(\"Preco should be a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.preco).to.be.a('number').and.to.be.at.least(0, \"Preco should be a non-negative number\");",
											"});",
											"",
											"pm.test(\"Description should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.descricao).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Quantidade should be a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.quantidade).to.be.a('number');",
											"    pm.expect(responseData.quantidade).to.be.at.least(0, \"Quantidade should be non-negative\");",
											"});",
											"",
											"",
											"pm.test(\"Categoria should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.categoria).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Categoria should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Id should be a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.id).to.be.a('number');",
											"    pm.expect(responseData.id).to.be.at.least(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/produtos/produtos/5",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"produtos",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar Produto By Nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Nome should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.nome).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Nome should not be empty\");",
											"});",
											"",
											"pm.test(\"Preco should be a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.preco).to.be.a('number').and.to.be.at.least(0, \"Preco should be a non-negative number\");",
											"});",
											"",
											"pm.test(\"Description should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.descricao).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Quantidade should be a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.quantidade).to.be.a('number');",
											"    pm.expect(responseData.quantidade).to.be.at.least(0, \"Quantidade should be non-negative\");",
											"});",
											"",
											"",
											"pm.test(\"Categoria should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.categoria).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Categoria should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Id should be a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.id).to.be.a('number');",
											"    pm.expect(responseData.id).to.be.at.least(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/produtos/produtos/listar-por-nome/Teclado",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"produtos",
										"listar-por-nome",
										"Teclado"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar Produto By Categoria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Content-Type is application/json\", function () {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"",
											"pm.test(\"Nome should be a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.nome).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Nome should not be empty\");",
											"});",
											"",
											"pm.test(\"Preco should be a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.preco).to.be.a('number').and.to.be.at.least(0, \"Preco should be a non-negative number\");",
											"});",
											"",
											"pm.test(\"Description should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.descricao).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Quantidade should be a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.quantidade).to.be.a('number');",
											"    pm.expect(responseData.quantidade).to.be.at.least(0, \"Quantidade should be non-negative\");",
											"});",
											"",
											"",
											"pm.test(\"Categoria should be a non-empty string\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.categoria).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Categoria should not be empty\");",
											"});",
											"",
											"",
											"pm.test(\"Id should be a non-negative integer\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.id).to.be.a('number');",
											"    pm.expect(responseData.id).to.be.at.least(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8082/produtos/produtos/listar-por-categoria/INFORMATICA",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"produtos",
										"listar-por-categoria",
										"INFORMATICA"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "APIs Para Outros Microservices",
					"item": [
						{
							"name": "Buscar  Dados Para Pedido",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8082/produtos/produtos/dados-pedido/5",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"produtos",
										"dados-pedido",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Buscar  Dados Para Entrega",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8082/produtos/produtos/dados-entrega/5",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"produtos",
										"dados-entrega",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Salvar o usuário da base de produtos",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"login\": \"exampleLogin\",\r\n    \"password\": \"examplePassword\",\r\n    \"roles\": [\r\n        \"USER\",\r\n        \"ADMIN\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8082/produtos/user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Importar Arquivo CSV",
					"item": [
						{
							"name": "Importar CSV",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/karol/Documents/pos_tech/fase_5/tech_chalenge/projeto-fiap-fase-5/produtos/src/main/resources/carga-de-produtos.csv"
										}
									]
								},
								"url": {
									"raw": "localhost:8082/produtos/produtos/importar-csv",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"produtos",
										"produtos",
										"importar-csv"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Criar Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Preco should be a non-negative number\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.preco).to.be.a('number');",
									"    pm.expect(responseData.preco).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Quantidade is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.quantidade).to.be.a('number');",
									"    pm.expect(responseData.quantidade).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Categoria is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.categoria).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODE2OTF9.Sa6PPuQZuNI-SgVMXkGISjtaa5sKT9YXPr9surO8Mxg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Teclado\",\r\n    \"descricao\": \"Teclado semi-mecânico, para uso diario.\",\r\n    \"preco\": 200.0,\r\n    \"quantidade\": 100,\r\n    \"categoria\": \"INFORMATICA\",\r\n    \"altura\": 3,\r\n    \"largura\": 15,\r\n    \"comprimento\": 30,\r\n    \"peso\": 0.3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/produtos/produtos/criar-produto",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"produtos",
								"produtos",
								"criar-produto"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar Produto By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-negative integer\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.id).to.exist.and.to.be.a('number');",
									"  pm.expect(responseData.id).to.be.at.least(0, \"Id should be a non-negative integer\");",
									"});",
									"",
									"",
									"pm.test(\"Preco is a non-negative float\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.preco).to.exist.and.to.be.a('number');",
									"  pm.expect(responseData.preco).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Quantidade is a non-negative integer\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.quantidade).to.be.a('number');",
									"  pm.expect(responseData.quantidade).to.be.at.least(0);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1Mjg5MDR9.plk5uBjzk80gsRwGTUWAWk2OttxUW-a7xW5M9oXlX0w",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"quantidade\": 120\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/produtos/produtos/atualizar-produto/4",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"produtos",
								"produtos",
								"atualizar-produto",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Produto By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1MjkwNjV9.MqlnI48corhUqvo3NboOQMME8rd4WPF3CI3p9tD7VRE",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/produtos/produtos/4",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"produtos",
								"produtos",
								"4"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pedido",
			"item": [
				{
					"name": "APIs Para Outros Microservices",
					"item": [
						{
							"name": "Inserir  Dados  de Entrega",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ikthcm9saW5lIiwicm9sZXMiOlsiVVNFUiJdLCJleHAiOjE3MjE1Mjk2OTd9.buEz5-ColGbl81FPCvVAnXkJy_2XE7jE1x293ZHt-OY",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"prazoEntrega\": 3,\r\n    \"frete\": 39.50,\r\n    \"codigoDeRastreio\": 12345678\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8082/pedidos/pedidos/inserir-dados-entrega/1",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"pedidos",
										"pedidos",
										"inserir-dados-entrega",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Salvar o usuário da base de pedidos",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"login\": \"exampleLogin\",\r\n    \"password\": \"examplePassword\",\r\n    \"roles\": [\r\n        \"USER\",\r\n        \"ADMIN\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8082/pedidos/user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"pedidos",
										"user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Criar Pedido",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ikthcm9saW5lIiwicm9sZXMiOlsiVVNFUiJdLCJleHAiOjE3MjE1ODYxNzN9.v59GBaitTDr1GL3QB3tsFjOxu7GTefzclA33eCmAiRI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"clienteId\": 1,\r\n    \"itensPedido\": [\r\n        {\r\n        \"produtoId\": 5,\r\n        \"quantidade\": 1\r\n        },\r\n        {\r\n        \"produtoId\": 6,\r\n        \"quantidade\": 10\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/pedidos/pedidos/criar-pedido",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"pedidos",
								"pedidos",
								"criar-pedido"
							],
							"query": [
								{
									"key": "1",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar Status Pedido",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ikthcm9saW5lIiwicm9sZXMiOlsiVVNFUiJdLCJleHAiOjE3MjE1Mjk2OTd9.buEz5-ColGbl81FPCvVAnXkJy_2XE7jE1x293ZHt-OY",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"PAGO\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/pedidos/pedidos/atualizar-status-pedido/25",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"pedidos",
								"pedidos",
								"atualizar-status-pedido",
								"25"
							],
							"query": [
								{
									"key": "1",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Entrega",
			"item": [
				{
					"name": "APIs para Outros Micreserviço Copy",
					"item": [
						{
							"name": "Salvar o usuário da base de entregas",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"login\": \"exampleLogin\",\r\n    \"password\": \"examplePassword\",\r\n    \"roles\": [\r\n        \"USER\",\r\n        \"ADMIN\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8082/entregas/user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"entregas",
										"user"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Criar Entrega",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhdXRoLWFwaSIsInN1YiI6Ik1hdGhldXMiLCJyb2xlcyI6WyJBRE1JTiJdLCJleHAiOjE3MjE1ODQwNDJ9.XdmkYohSGP_ZGIjTADNDCFI1evfpvbDQz6w-o2vtiJw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pedido_id\": 1,\r\n    \"cliente_id\": 1,\r\n    \"produtos\": [\r\n        {\r\n            \"produto_id\": \"5\",\r\n            \"quantidade\": 1\r\n        },\r\n        {\r\n            \"produto_id\": \"6\",\r\n            \"quantidade\": 10\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/entregas/entregas/criar-entrega",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"entregas",
								"entregas",
								"criar-entrega"
							],
							"query": [
								{
									"key": "1",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Consulta Melhor Envio(Teste)",
			"item": [
				{
					"name": "Consultar Dados De Entrega",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZmY5NmQ5NmUzZmY0YjQ2YmYyM2YwNDYzMTk3ODAyOTQyZTVhNzlkOTg0MzRmYWJlZDBmNTc3NDU3NDg4NjRkM2NkOGU5MWY4NjQwYTZlMTQiLCJpYXQiOjE3MTIxMDM1MTguMzE1ODg5LCJuYmYiOjE3MTIxMDM1MTguMzE1ODkxLCJleHAiOjE3NDM2Mzk1MTguMzA2NDY1LCJzdWIiOiI5YmI3MDMwOC1kYzg3LTQ2YWItYjhlZS1kMTExMjcxYjA0NjQiLCJzY29wZXMiOlsic2hpcHBpbmctY2FsY3VsYXRlIl19.CvbX3KTBlatMawbjJhmenmtWZD6otSzvXzaiFWo2yEVteiO9W248DGzlWM9WvZP3NM09-91XDf4SK8W0gWwQ7tt0zT7ZPMf4Q8xsJih3DussjcNsD-r2KSnESvFcfGq-WfLiZMisqK1ll1qdOJyEbpIuGQ74r4njgzKdaRd0fANtuqP4qFs2P4XBVoGdCVyvwZp50SDx_OFqsyMZvNdp1qrAhnWQamIJ6KSgRPELDiqlLOaNmDTjXv7q38GpzzsG795JiWKpL966C-PC5SlgoAzH4kCHNUVMCzAlKKWL3GjIemqVoqi6qCLZ2s_igjEP8QPhcIsIWHE3nQKhX7lQejW9cxn5TLuIna-KOba-rJIJAVBaecSq-b5rkkUxzQ4hmCABKAXCtBg4x6oVaDLZ2K0dMMd0o0xEQxhIpuISCpskLtdzWDKXemCl6_vTcD4dpUptlXgHf0YRCP4OynJxwv-cgjhi_kGfNCsGs9rOrc9LUdTH1H6fM17GKdfB6kFMRxYn_cbMsX3LDN-A4n2RO8YMFMpK1Y9S7Ntw-kpoyHRfF2ZwOg8LETX-Rax7Mcm7a4dGeA1yqYqF9eScR9fc_KVcmzaTE_qxMu9l8LuPWMkFVTz3PjQd0OE6LxeHzQHbze2VmT7Cauec6clsxB3ar0GTDLWGEBQchMFkSQlROko"
							},
							{
								"key": "User-Agent",
								"value": "Aplicação matheushajer15@gmail.com"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": {\r\n        \"postal_code\": \"06332450\"\r\n    },\r\n    \"to\": {\r\n        \"postal_code\": \"06332350\"\r\n    },\r\n    \"products\": [\r\n        {\r\n            \"id\": \"1\",\r\n            \"width\": 11,\r\n            \"height\": 17,\r\n            \"length\": 11,\r\n            \"weight\": 0.3,\r\n            \"quantity\": 1\r\n        },\r\n        {\r\n            \"id\": \"2\",\r\n            \"width\": 11,\r\n            \"height\": 17,\r\n            \"length\": 11,\r\n            \"weight\": 0.3,\r\n            \"quantity\": 1\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://melhorenvio.com.br/api/v2/me/shipment/calculate",
							"protocol": "https",
							"host": [
								"melhorenvio",
								"com",
								"br"
							],
							"path": [
								"api",
								"v2",
								"me",
								"shipment",
								"calculate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuarios",
			"item": [
				{
					"name": "Registrar Usuário",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\":\"Karol Gerencia\",\r\n    \"password\":\"123456\",\r\n    \"roles\":[\"ADMIN\",\"USER\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/usuarios/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"usuarios",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login de Usuário",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\":\"Karoline\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/usuarios/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"usuarios",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}